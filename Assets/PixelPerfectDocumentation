# What you are trying to achieve?
Become familiar with the Pixel Perfect Camera package 
and how to set it up to achieve the look of the game entirely rendered at pixel art resolution
  
# Who worked on the prototype?
olito413 (Toby)

# How long the prototype took to complete.
2h 0m 0s
This time was spent on the following tasks
- Reading Unity documentation on Pixel Perfect Camera 
- Implementing it in a scene with some reference sprites at our target 32x32 resolution
  that show it is working as intended
- Debugging why none of my changes were showing to be committed
  (The assets/ folder was set to ignore in the .git/info/exclude file somehow
    found cool git command: git check-ignore -v 
    which returns location and line number of .gitignore or exclude file causing file to be excluded)  

# What decisions did you make based on the prototype? What worked, what didn't?
There is a lot of variables you can change to determine the size and scaling of camera output.
I have determined the best way to handle this is to lock 32 pixels per unit and adjust resolution 
to achieve the desired zoom in/out of the camera.

I couldn't get grid snapping to work so while game objects will render pixel perfect their actual position wont be.

# What new questions / prototypes arose from this one?
I need to do more research and testing around grid snapping and how it effects collisions
most importantly with projectiles as this will effect the feel of the game a lot. 
(players don't enjoy dying when they didnt get hit visually)